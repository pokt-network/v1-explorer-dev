generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model account {
  address String
  balance String
  height  BigInt

  @@unique([address, height], map: "account_create_height")
}

model app {
  address          String
  public_key       String
  staked_tokens    String
  unused           String
  output_address   String
  paused_height    BigInt @default(-1)
  unstaking_height BigInt @default(-1)
  height           BigInt @default(-1)

  @@unique([address, height], map: "app_height")
}

model app_chains {
  address  String
  chain_id String @db.Char(4)
  height   BigInt @default(-1)

  @@unique([address, chain_id, height], map: "app_chain_height")
}

model block {
  height             BigInt @id
  hash               String
  proposer_address   Bytes
  quorum_certificate Bytes
}

model fisherman {
  address          String
  public_key       String
  staked_tokens    String
  service_url      String
  output_address   String
  paused_height    BigInt @default(-1)
  unstaking_height BigInt @default(-1)
  height           BigInt @default(-1)

  @@unique([address, height], map: "fisherman_height")
}

model fisherman_chains {
  address  String
  chain_id String @db.Char(4)
  height   BigInt @default(-1)

  @@unique([address, chain_id, height], map: "fisherman_chain_height")
}

model flags {
  name    String   @db.VarChar(64)
  height  BigInt
  type    val_type
  value   String
  enabled Boolean

  @@id([name, height])
}

model params {
  name   String   @db.VarChar(64)
  height BigInt
  type   val_type
  value  String

  @@id([name, height])
}

model pool {
  name    String
  balance String
  height  BigInt

  @@unique([name, height], map: "pool_create_height")
}

model servicer {
  address          String
  public_key       String
  staked_tokens    String
  service_url      String
  output_address   String
  paused_height    BigInt @default(-1)
  unstaking_height BigInt @default(-1)
  height           BigInt @default(-1)

  @@unique([address, height], map: "servicer_height")
}

model servicer_chains {
  address  String
  chain_id String @db.Char(4)
  height   BigInt @default(-1)

  @@unique([address, chain_id, height], map: "servicer_chain_height")
}

model validator {
  address          String
  public_key       String
  staked_tokens    String
  service_url      String
  output_address   String
  paused_height    BigInt @default(-1)
  unstaking_height BigInt @default(-1)
  height           BigInt @default(-1)

  @@unique([address, height], map: "validator_node_height")
}

enum val_type {
  STRING
  BIGINT
  SMALLINT
}
